{"name":"gpio","body":"# description\r\n====\r\n\r\ngpio allows for devices such as raspberry pi or systems with 1wire usb adapters to speak to the system's input/output pins.\r\n\r\n# installation\r\n====\r\n\r\n### bundler\r\n\r\nusing bundler, add this to your Gemfile in the root of your app\r\n\r\n```ruby\r\ngem 'gpio'\r\n```\r\ninstall bundler and then run bundle install\r\n```bash\r\ngem install bundler\r\nbundle install\r\n```\r\n\r\n\r\n### gem install\r\n\r\nfrom command line\r\n\r\n```bash\r\ngem install gpio\r\n```\r\n\r\nrequire in your ruby file\r\n\r\n```ruby\r\nrequire 'gpio'\r\n```\r\n\r\n# example\r\n====\r\n\r\nlet's setup a motion sensor on GPIO pin 17 on a RaspberryPi (default).\r\n\r\n```ruby\r\nmotion = GPIO::MotionDetector.new(pin: 17)\r\n```\r\n\r\ndo we detect and motion yet?\r\n\r\n```ruby\r\nmotion.detect\r\n```\r\n\r\nlet's print a message corresponding to the motion.detect?\r\n\r\n```ruby\r\nputs motion.detect ? \"Motion detected!\" : \"No motion detected.\"\r\n```\r\n\r\nwas the value any different than the last time it detected?\r\n\r\n```ruby\r\nmotion.changed?\r\nputs \"last: #{motion.last_reading}, current: #{motion.reading}\"\r\n```\r\n\r\nwait until the value changes before we move on.\r\n\r\n```ruby\r\nuntil motion.changed? do\r\n\tmotion.detect\r\n\tsleep 0.5\r\nend\r\nputs \"Something changed!\"\r\nputs \"last: #{motion.last_reading}, current: #{motion.reading}\"\r\n```","tagline":"a ruby gem and repository to contribute gpio code for devices such as Raspberry Pi to read sensors and control outputs.","google":"UA-30885917-1","note":"Don't delete this file! It's used internally to help with page regeneration."}